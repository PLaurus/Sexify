apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: 'kotlin-kapt'

android {
	compileSdk 32

	defaultConfig {
		minSdk 21
		targetSdk android.compileSdk

		versionCode 1
		versionName "1.0"

        vectorDrawables.useSupportLibrary = true

		testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
		consumerProguardFiles "../consumer-rules.pro"
	}

	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), '../proguard-rules.pro'
		}
	}

	kotlinOptions {
		jvmTarget = JavaVersion.VERSION_11
	}

	buildFeatures {
		viewBinding = true
	}
}

// Add here only widely used dependencies!!!
// If you are developing feature and need to use a new library add this dependency to the feature's module.
dependencies {
	// Reflection
	implementation "org.jetbrains.kotlin:kotlin-reflect:1.7.0"

	// Dependency injection
	implementation "com.google.dagger:dagger:2.42"
	kapt "com.google.dagger:dagger-compiler:2.42"

	// MVI
	def mviKotlinVersion = "3.0.0-beta02"
	implementation "com.arkivanov.mvikotlin:mvikotlin:$mviKotlinVersion"
	implementation "com.arkivanov.mvikotlin:mvikotlin-main:$mviKotlinVersion"
	implementation "com.arkivanov.mvikotlin:mvikotlin-logging:$mviKotlinVersion"
	implementation "com.arkivanov.mvikotlin:mvikotlin-timetravel:$mviKotlinVersion"
	implementation "com.arkivanov.mvikotlin:mvikotlin-extensions-coroutines:$mviKotlinVersion"

	// ViewModel
	implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.0-rc02")

	// ???
	implementation 'androidx.core:core-ktx:1.8.0'
	implementation 'androidx.appcompat:appcompat:1.4.2'

	// UI
	implementation 'com.google.android.material:material:1.7.0-alpha02'
	implementation "androidx.fragment:fragment-ktx:1.4.1"

	// Asynchronous programming
	implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.1"

	// Testing
	testImplementation 'junit:junit:4.13.2'
	androidTestImplementation 'androidx.test.ext:junit:1.1.3'
	androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}